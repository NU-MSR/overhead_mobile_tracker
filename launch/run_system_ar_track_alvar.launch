<launch>
  <!-- camera driver options -->
  <arg name="camera_enable" default="true"/>
  <arg name="camera_device" default="/dev/video1"/>
  <arg name="camera_info" default="file://$(find overhead_mobile_tracker)/launch/overhead_tracker_camera.yaml"/>
  <arg name="camera_frame_id" default="overhead_cam_frame"/>
  <arg name="camera_width" default="1280"/>
  <arg name="camera_height" default="720" />
  <arg name="camera_fps"  default="30"/>
  <arg name="video_namespace" default="overhead_camera"/>
  <arg name="video_image_topic" default="image_raw"/>
  <arg name="video_info_topic" default="camera_info"/>

  <!-- ar_track_alvar options -->
  <arg name="marker_size" default="20.3" />
  <arg name="max_new_marker_error" default="0.08" />
  <arg name="max_track_error" default="0.2" />
  <arg name="cam_image_topic" default="$(arg video_namespace)/$(arg video_image_topic)" />
  <arg name="cam_info_topic" default="$(arg video_namespace)/$(arg video_info_topic)" />
  <arg name="output_frame" default="$(arg camera_frame_id)" />

  <!-- generic and tracker options -->
  <arg name="vis" default="true" />
  <arg name="frame_id" default="odom_meas" />
  <arg name="base_frame_id" default="base_meas" />
  <arg name="x0" default="0.0" />
  <arg name="y0" default="0.0" />
  <arg name="th0" default="0.0" />
  <arg name="pubstate" default="true" />
  <arg name="marker_id" default="12" />

  <!-- start camera drivers -->
  <group if="$(arg camera_enable)" ns="$(arg video_namespace)">
    <node pkg="image_proc" type="image_proc" name="image_proc" />
  </group>
  <node pkg="usb_cam" type="usb_cam_node" name="$(arg video_namespace)" output="screen"
        if="$(arg camera_enable)">
    <param name="video_device" type="string" value="$(arg camera_device)"/>
    <param name="pixel_format" type="string" value="mjpeg" />
    <param name="image_width" type="int" value="$(arg camera_width)" />
    <param name="image_height" type="int" value="$(arg camera_height)" />
    <param name="camera_name" type="string" value="camera"/>
    <param name="camera_frame_id" type="string" value="overhead_cam_frame"/>
    <param name="camera_info_url" value="file://$(find overhead_mobile_tracker)/launch/overhead_tracker_camera.yaml"/>
  </node>


  <!-- start ar_track_alvar node -->
  <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect"
        respawn="false" output="screen"
        args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)" />


  <!-- start static transform broadcaster to odom_meas frame (this launch file should come from calibration) -->
  <include file="$(find overhead_mobile_tracker)/launch/odom_frame_broadcaster.launch" />


  <!-- start mobile tracker -->
  <node name="mobile_tracker" pkg="overhead_mobile_tracker" type="mobile_tracker.py"
        output="screen" >
    <param name="~frame_id" type="string" value="$(arg frame_id)" />
    <param name="~camera_frame_id" type="string" value="$(arg camera_frame_id)" />
    <param name="~base_frame_id" type="string" value="$(arg base_frame_id)" />
    <param name="~x0" type="double" value="$(arg x0)" />
    <param name="~y0" type="double" value="$(arg y0)" />
    <param name="~th0" type="double" value="$(arg th0)" />
    <param name="~pubstate" type="bool" value="$(arg pubstate)" />
    <param name="~marker_id" type="int" value="$(arg marker_id)" />
  </node>

  <!-- start rviz -->
  <node if="$(arg vis)" name="rviz" pkg="rviz" type="rviz"
        args="-d $(find overhead_mobile_tracker)/launch/ar_track_alvar_config.rviz" />

</launch>
